package com.example.demo.service;

import java.io.IOException;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.StringRedisTemplate;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

import com.fasterxml.jackson.databind.ObjectMapper;

public class RedisSessionInterceptor implements HandlerInterceptor {
	
	@Autowired
	private StringRedisTemplate redisTemplate;
	
	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response,
						Object handler) throws Exception {
		
		//先检验请求资源的类型
		String uri = request.getRequestURI();
		if (uri.endsWith("js")||uri.endsWith("css")||uri.endsWith("jpg")||
				uri.endsWith("svg")||uri.endsWith("jpg")||uri.endsWith("png")) {
			return true;
		}
		
		//获得cookie
		Cookie cookie[] = request.getCookies();
		
		//判断cookie内容
		if (cookie == null) {
			response.sendRedirect(request.getContextPath() + "/login");
		}
		
		String cookie_username = null;
		
		for (Cookie item : cookie) {
			if (item.getName().equals("cookie_username")) {
				cookie_username = item.getValue()();
			}
		}
		
		
		//无论访问地址是否正确，都先进行登录验证再分发
		HttpSession session = request.getSession();
		
//		if (session.getAttribute("loginUser") == null) {
//			request.setAttribute("msg","请先登录！");
//            request.getRequestDispatcher("logging").forward(request, response);
//            return false;
//		} 
		
		if (session.getAttribute("LoginUserId") != null) {
			try {
				//在redis中检索
				String loginUserId = redisTemplate.opsForValue().get("LoginUser:" + session.getAttribute("LoginUserId"));
				if (loginUserId != null && loginUserId.equals(session.getId())) {
					return true;
				}
			}
			catch (Exception e) {
				e.printStackTrace();
			}
		}
		response401(response);
		return false;
	}
	
	private void response401(HttpServletResponse response) {
		response.setCharacterEncoding("UTF-8");
		response.setContentType("application/json; charset=utf-8");
		
		try {
			
			response.getWriter().print("error");
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	@Override
    public void postHandle(HttpServletRequest request, HttpServletResponse response, 
    			Object handler, ModelAndView modelAndView) throws Exception {
 
    }
 
    @Override
    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, 
    			Object handler, Exception ex) throws Exception {
  
    }
}
